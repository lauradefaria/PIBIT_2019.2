{
  "swagger": "2.0",
  "info": {
    "title": "HOPE",
    "description": "Plataforma para desenvolvimento de aplicações voltadas para redes de cuidados que visam facilitar e potencializar o acesso a serviços digitais de modo a minimizar a exclusão social de alguns grupos da sociedade.",
    "version": "0.0.0"
  },

  "consumes": [
    "application/json",
    "multipart/form-data"
  ],
  "produces": [
    "application/json"
  ],

  "securityDefinitions": {
    "Token": {
      "type": "apiKey",
      "in": "header",
      "name": "Authorization"
    }
  },
  "security":[{
    "Token": []
  }],
  "tags": [
    {
      "name": "Init",
      "description": "operation base"
    },
    {
      "name": "Users",
      "description": "Operations about Users"
    },
    {
      "name": "TypeUser",
      "description": "Operations about Type user"
    },
    {
      "name": "Sessions",
      "description": "Operations about Sessions"
    },
    {
      "name": "Actions",
      "description": "Operations about Actions"
    },
    {
      "name": "Permissions",
      "description": "Operations about Permissions"
    },
    {
      "name": "Cards",
      "description": "Operations about cards"
    },
    {
      "name": "TypeCard",
      "description": "Operations about Type card"
    },
    {
      "name": "Posts",
      "description": "Operations about uploard de posts"
    },
    {
      "name": "Extract",
      "description": "Extract data from article"
    }
  ],
  "definitions": {
    "Users": {
      "type": "object",
      "properties": {
        "first_name": {
          "type": "string"
        },
        "last_name": {
          "type": "string"
        },
        "cpf": {
          "type": "string"
        },
        "age": {
          "type": "integer"
        },
        "email": {
          "type": "string"
        },
        "password": {
          "type": "string"
        },
        "image_url": {
          "type": "string"
        },
        "address_city": {
          "type": "string"
        },
        "address_state": {
          "type": "string"
        },
        "address_country": {
          "type": "string"
        },
        "address_zipcode": {
          "type": "string"
        },
        "data": {
          "type": "string",
          "format": "date-time"
        },
        "userTypeID": {
          "type": "string"
        },
        "passwordResetToken": {
          "type": "string"
        },
        "passwordResetExpires": {
          "type": "string",
          "format": "date-time"
        },
        "createdAt":{
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "TypeUser": {
      "type": "object",
      "properties": {
        "userTypeID": {
          "type": "integer"
        },
        "name": {
          "type": "string"
        },
        "createdAt": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "Sessions":{
      "type": "object",
      "properties": {
        "userID": {
          "type": "string"
        },
        "userEmail": {
          "type": "string"
        },
        "actionsHistory" :{
          "type": "array",
          "items": {
            "type": "integer"
          }
        },  
        "token":{
          "type": "string"
        },
        "active":{
          "type": "boolean"
        },
        "createdAt": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "Actions": {
      "type": "object",
      "properties": {
        "actionID": {
          "type": "integer"
        },
        "name": {
          "type": "string"
        },
        "createdAt": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "ActionsAllowed": {
      "type": "object",
      "properties": {
        "actionsAllowedID": {
          "type": "integer"
        },
        "userType": {
          "type": "string"
        },
        "actionID": {
          "type": "array",
          "items": {
            "type": "integer"
          }
        },
        "createdAt": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "TypeCard": {
      "type": "object",
      "properties": {
        "cardTypeID": {
          "type": "integer"
        },
        "name": {
          "type": "string"
        },
        "createdAt": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "Cards": {
      "type": "object",
      "properties": {
        "title": {
          "type": "string"
        },
        "user_id": {
          "type": "string",
          "format": "ObjectIdMongo"
        },
        "cardTypeID": {
          "type": "integer"
        },
        "description": {
          "type": "string"
        },
        "image_url": {
          "type": "string"
        },
        "video_url": {
          "type": "string"
        },
        "link_url": {
          "type": "string"
        },
        "headline": {
          "type": "string"
        },
        "context": {
          "type": "object"
        },
        "createdAt": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "Posts":{
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "size": {
          "type": "integer"
        },
        "key": {
          "type": "string"
        },
        "url": {
          "type": "string"
        },
        "createdAt": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "Error":{
      "type": "object",
      "properties": {
        "error": {
          "type": "string"
        }
      }
    }
  },
  "parameters": {
    "userID": {
      "in": "path",
      "name": "id",
      "required": true,
      "type": "string",
      "description": "id do usuário"
    },
    "userTypeID": {
      "in": "path",
      "name": "id",
      "required": true,
      "type": "integer",
      "description": "id do tipo de usuario"
    },
    "sessionID": {
      "in": "path",
      "name": "id",
      "required": true,
      "type": "string",
      "description": "id da session"
    },
    "actionID": {
      "in": "path",
      "name": "id",
      "required": true,
      "type": "integer",
      "description": "id de tipo de acao"
    },
    "actionsAllowedID": {
      "in": "path",
      "name": "keyword",
      "required": true,
      "type": "integer",
      "description": "id do tipo de permissao"
    },
    "cardID": {
      "in": "path",
      "name": "id",
      "required": true,
      "type": "string",
      "description": "id de card"
    },
    "cardKeyword": {
      "in": "path",
      "name": "id",
      "required": true,
      "type": "string",
      "description": "id do tipo de card"
    },
    "cardTypeID": {
      "in": "path",
      "name": "id",
      "required": true,
      "type": "string",
      "description": "id do tipo de card"
    },
    "postID": {
      "in": "path",
      "name": "id",
      "required": true,
      "type": "string",
      "description": "id do post"
    }
  },
  "paths": {

    "/users/authenticate":{
      "post":{
        "tags": [
          "Init"
        ],
        "summary": "Autenticar usuário para ter acesso aos dados da API",
        "parameters": [
          {
            "in": "body",
            "name": "Autenticação",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "email": {
                  "type": "string"
                },
                "password": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "properties": {
                "user": {
                  "type": "object",
                  "properties": {
                    "first_name": {
                      "type": "string"
                    },
                    "last_name": {
                      "type": "string"
                    },
                    "cpf": {
                      "type": "string"
                    },
                    "age": {
                      "type": "integer"
                    },
                    "email": {
                      "type": "string"
                    },
                    "image_url": {
                      "type": "string"
                    },
                    "address_country": {
                      "type": "string"
                    },
                    "address_zipcode": {
                      "type": "string"
                    },
                    "userTypeID": {
                      "type": "string"
                    }
                  }
                },
                "token": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Senha errada ||  Falha ao abrir nova session",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404":{
            "description": "Usuário não encontrado",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Falha ao autenticar usuário",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "default": {
            "description": "Falha ao autenticar usuário",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/users/register" : {
      "post": {
        "tags": [
          "Init"
        ],
        "summary": "Cadastrar novo usuário",
        "parameters": [
          {
            "in": "body",
            "name": "Cadastrar usuario",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "first_name": {
                  "type": "string"
                },
                "last_name": {
                  "type": "string"
                },
                "cpf": {
                  "type": "string"
                },
                "age": {
                  "type": "integer"
                },
                "email": {
                  "type": "string"
                },
                "password": {
                  "type": "string"
                },
                "image_url": {
                  "type": "string"
                },
                "address_country": {
                  "type": "string"
                },
                "address_zipcode": {
                  "type": "string"
                },
                "userTypeID": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "type": "object",
              "properties": {
                "user": {
                  "type": "object",
                  "properties": {
                    "first_name": {
                      "type": "string"
                    },
                    "last_name": {
                      "type": "string"
                    },
                    "cpf": {
                      "type": "string"
                    },
                    "age": {
                      "type": "integer"
                    },
                    "email": {
                      "type": "string"
                    },
                    "image_url": {
                      "type": "string"
                    },
                    "address_country": {
                      "type": "string"
                    },
                    "address_zipcode": {
                      "type": "string"
                    },
                    "userTypeID": {
                      "type": "string"
                    }
                  }
                },
                "token": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Informações incompletas || Endereço inválido|| CPF inválido || Email inválido || CEP inválido",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Tipo de usuário não encontrado",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "409": {
            "description": "CPF ou Email já cadastrado",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Ocorreu um erro ao cadastrar usuário, tente novamente",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "default": {
            "description": "Ocorreu um erro ao cadastrar usuário, tente novamente",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/users/forgot_password":{
      "post":{
        "tags": [
          "Init"
        ],
        "summary": "Enviar email com token para resetar senha esquecida",
        "parameters": [
          {
            "in": "body",
            "name": "Esqueceu senha",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "email": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "404": {
            "description": "Usuário não encontrado",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Error ao enviar email se recuperação || Erro, tente novamente em alguns segundos ",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "default": {
            "description": "Error ao enviar email se recuperação",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/users/reset_password":{
      "post":{
        "tags": [
          "Init"
        ],
        "summary": "Mudar senha esquecida",
        "parameters": [
          {
            "in": "body",
            "name": "Resetar senha",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "email": {
                  "type": "string"
                },
                "token": {
                  "type": "string"
                },
                "password": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Token inválido || Token inválido, tente novamente",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Usuário não encontrado",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Falha ao mudar senha, tente novamente",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "default": {
            "description": "Falha ao mudar senha, tente novamente",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },

    "/users": {
      "get": {
        "tags": [
          "Users"
        ],
        "security": [{
          "Token" : [] 
        }],
        "summary": "Consultar todos os usuários",
        "responses": {
          "200": {
            "description": "OK || Não há usuários cadastrados (sem corpo)",
            "schema": {
              "$ref": "#/definitions/Users"
            }
          },
          "500": {
            "description": "Falha ao listar usuários",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "default": {
            "description": "Falha ao listar usuários",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/users/{id}": {
      "get": {
        "tags": [
          "Users"
        ],
        "security": [{
          "Token" : [] 
        }],
        "summary": "Consultar usuário específico",
        "parameters": [
          {
            "$ref": "#/parameters/userID"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Users"
            }
          },
          "404": {
            "description": "Usuário não encontrado",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Falha ao mostrar usuário",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "default": {
            "description": "Falha ao mostrar usuário",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "put": {
        "tags": [
          "Users"
        ],
        "security": [{
          "Token" : [] 
        }],
        "summary": "Atualizar informações do usuario",
        "parameters": [
          {
            "$ref": "#/parameters/userID"
          },
          {
            "in": "body",
            "name": "Atuaizar usuario",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "first_name": {
                  "type": "string"
                },
                "last_name": {
                  "type": "string"
                },
                "cpf": {
                  "type": "string"
                },
                "age": {
                  "type": "integer"
                },
                "email": {
                  "type": "string"
                },
                "image_url": {
                  "type": "string"
                },
                "address_country": {
                  "type": "string"
                },
                "address_zipcode": {
                  "type": "string"
                },
                "userTypeID": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Users"
            }
          },
          "400": {
            "description": " Informações incompletas || Endereço inválido || CPF inválido || Email inválido || CEP inválido",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Usuário não encontrado || Tipo de usuário não encontrado",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "409": {
            "description": "CPF ou Email já cadastrado",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": " Falha ao atualizar informações do usuário",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "default": {
            "description": " Falha ao atualizar informações do usuário",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Users"
        ],
        "security": [{
          "Token" : [] 
        }],
        "summary": "Apagar usuario",
        "parameters": [
          {
            "$ref": "#/parameters/userID"
          }
        ],
        "responses": {
          "200": {
            "description": "Removido"
          },
          "404": {
            "description": "Usuário não encontrado",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Falha ao deletar usuário",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "default": {
            "description": "Falha ao deletar usuário",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },

    "/typeUser": {
      "post": {
        "tags": [
          "TypeUser"
        ],
        "security": [{
          "Token" : [] 
        }],
        "summary": "Criar novo tipo de usuario",
        "parameters": [
          {
            "in": "body",
            "name": "Cadastrar novo tipo de usuario",
            "required": true,
            "schema": {
              "$ref": "#/definitions/TypeUser"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/TypeUser"
            }
          },
          "400": {
            "description": "Informações incompletas",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "409": {
            "description": "Tipo de usuário já registrado",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Falha ao criar novo tipo de usuário",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "default": {
            "description": "Falha ao criar novo tipo de usuário",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "get": {
        "tags": [
          "TypeUser"
        ],
        "security": [{
          "Token" : [] 
        }],
        "summary": "Consultar todos os tipos de usuários",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/TypeUser"
              }
            }
          },
          "500": {
            "description": "Falha ao listar todos os tipos de usuário",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "default": {
            "description": "Falha ao listar todos os tipos de usuário",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/typeUser/{id}": {
      "get": {
        "tags": [
          "TypeUser"
        ],
        "security": [{
          "Token" : [] 
        }],
        "summary": "Consultar tipo de usuário específico",
        "parameters": [
          {
            "$ref": "#/parameters/userTypeID"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/TypeUser"
            }
          },
          "404": {
            "description": "Tipo de usuário não encontrado",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Falha ao buscar por tipo de usuário",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "default": {
            "description": "Falha ao buscar por tipo de usuário",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "put": {
        "tags": [
          "TypeUser"
        ],
        "security": [{
          "Token" : [] 
        }],
        "summary": "Atualizar tipo de usuário",
        "parameters": [
          {
            "$ref": "#/parameters/userTypeID"
          },
          {
            "in": "body",
            "name": "Atualizar usuario",
            "required": true,
            "schema": {
              "$ref": "#/definitions/TypeUser"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/TypeUser"
            }
          },
          "400": {
            "description": "Informações incompletas",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Tipo de usuário não encontrado",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "409": {
            "description": "Tipo de usuário já existente",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Falha ao atualizar tipo de usuário",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "default": {
            "description": "Falha ao atualizar tipo de usuário",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "TypeUser"
        ],
        "security": [{
          "Token" : [] 
        }],
        "summary": "Apagar tipo de usuário",
        "parameters": [
          {
            "$ref": "#/parameters/userTypeID"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "404": {
            "description": "Tipo de usuário não encontrado",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Falha ao deletar tipo de usuário",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "default": {
            "description": "Falha ao deletar tipo de usuário",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },

    "/sessions":{
      "get": {
        "tags": [
          "Sessions"
        ],
        "security": [{
          "Token" : [] 
        }],
        "summary": "Consultar todas sesssions",
        "responses": {
          "200": {
            "description": "OK || Não há sessions cadastrados",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Sessions"
              }
            }
          },
          "500": {
            "description": "Falha ao listar todas as sessions",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "default": {
            "description": "Falha ao listar todas as sessions",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/sessions/{id}":{
      "put": {
        "tags": [
          "Sessions"
        ],
        "security": [{
          "Token" : [] 
        }],
        "summary": "Atualizar informações da session, a parti do seu id",
        "parameters": [
          {
            "$ref": "#/parameters/sessionID"
          },
          {
            "in": "body",
            "name": "Atualizar session",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Sessions"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK ",
            "schema": {
              "$ref": "#/definitions/Sessions"
            }
          },
          "404":{
            "description": "Session não encontrada",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Falha ao atualizar session",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "default": {
            "description": "Falha ao atualizar session",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Sessions"
        ],
        "security": [{
          "Token" : [] 
        }],
        "summary": "Apagar session",
        "parameters": [
          {
            "$ref": "#/parameters/sessionID"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "404": {
            "description": "Session não encontrada",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Falha ao deletar session",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "default": {
            "description": "Falha ao deletar session",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/sessions/logout":{
      "post": {
        "tags": [
          "Sessions"
        ],
        "security": [{
          "Token" : [] 
        }],
        "summary": "Desativar session",
    
        "responses": {
          "200": {
            "description": "Session expirada"
          },
          "400": {
            "description": "Token inválido || Session já sofreu logout",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Falha ao sair",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "default": {
            "description": "Falha ao sair",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/sessions/storeHistory":{
      "post": {
        "tags": [
          "Sessions"
        ],
        "security": [{
          "Token" : [] 
        }],
        "summary": "Adicionar ação a session",
        "parameters": [
          {
            "in": "body",
            "name": "Adicionar ação",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "actionID": {
                  "type": "integer"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Sessions"
            }
          },
          "400": {
            "description": "Informações incompletas || Ação inexistente",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Session não encontrada",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Falha ao adicionar ação à session",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "default": {
            "description": "Falha ao adicionar ação à session",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },

    "/actions": {
      "post": {
        "tags": [
          "Actions"
        ],
        "security": [{
          "Token" : [] 
        }],
        "summary": "Criar nova ação",
        "parameters": [
          {
            "in": "body",
            "name": "Cadastrar ação",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Actions"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Actions"
            }
          },
          "400": {
            "description": "Informações incompletas",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "409": {
            "description": "Tipo de ação já registrada",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Falha ao criar novo tipo de ação",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "default": {
            "description": "Falha ao criar novo tipo de ação",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "get": {
        "tags": [
          "Actions"
        ],
        "security": [{
          "Token" : [] 
        }],
        "summary": "Consultar todas as ações",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Actions"
              }
            }
          },
          "404": {
            "description": "Nenhuma ação encontrada",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Falha ao listar tipos de ação",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "default": {
            "description": "Falha ao listar tipos de ação",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/actions/{id}": {
      "put": {
        "tags": [
          "Actions"
        ],
        "security": [{
          "Token" : [] 
        }],
        "summary": "Atualizar informações da ação a partir do seu id",
        "parameters": [
          {
            "$ref": "#/parameters/actionID"
          },
          {
            "in": "body",
            "name": "Atualizar ação",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Actions"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Actions"
            }
          },
          "400": {
            "description": "Informações incompletas",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Tipo de ação não encontrada",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "409": {
            "description": "Tipo de ação já existente",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Falha ao atualizar tipo de ação",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "default": {
            "description": "Falha ao atualizar tipo de ação",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Actions"
        ],
        "security": [{
          "Token" : [] 
        }],
        "summary": "Apagar ação a partir do seu id",
        "parameters": [
          {
            "$ref": "#/parameters/actionID"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "404": {
            "description": "Tipo de ação não encontrada",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Falha ao deletar tipo de ação",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "default": {
            "description": "Falha ao deletar tipo de ação",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },

    "/actionsAllowed": {
      "post": {
        "tags": [
          "Permissions"
        ],
        "security": [{
          "Token" : [] 
        }],
        "summary": "Criar permissões para um tipo de usuário",
        "parameters": [
          {
            "in": "body",
            "name": "Cadastrar novo array de permissões",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ActionsAllowed"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ActionsAllowed"
            }
          },
          "400": {
            "description": "Informações incompletas",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "409": {
            "description": "Tipo de usuário já registrado",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Falha ao criar permissões para tipo de usuário",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "default": {
            "description": "Falha ao criar permissões para tipo de usuário",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "get": {
        "tags": [
          "Permissions"
        ],
        "security": [{
          "Token" : [] 
        }],
        "summary": "Consultar todas as permissões",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ActionsAllowed"
              }
            }
          },
          "404": {
            "description": "Nenhum tipo de usuário encontrado.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Falha ao listar permissões por tipo de usuário",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "default": {
            "description": "Falha ao listar permissões por tipo de usuário",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/actionsAllowed/{id}": {
      "get": {
        "tags": [
          "Permissions"
        ],
        "security": [{
          "Token" : [] 
        }],
        "summary": "Consultar permissões para tipo de usuário específico",
        "parameters": [
          {
            "$ref": "#/parameters/userTypeID"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ActionsAllowed"
            }
          },
          "404": {
            "description": "Tipo de usuário não encontrado",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Falha ao listar permissões para tipo específico de usuário",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "default": {
            "description": "Falha ao listar permissões para tipo específico de usuário",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "put": {
        "tags": [
          "Permissions"
        ],
        "security": [{
          "Token" : [] 
        }],
        "summary": "Atualizar permissões para tipo de usuário específico",
        "parameters": [
          {
            "$ref": "#/parameters/userTypeID"
          },
          {
            "in": "body",
            "name": "Atualizar usuario",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ActionsAllowed"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ActionsAllowed"
            }
          },
          "400": {
            "description": "Informações incompletas",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Tipo de usuário não encontrado",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "409": {
            "description": "Tipo de usuário já existente",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Falha ao atualizar permissões para tipo específico de usuário",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "default": {
            "description": "Falha ao atualizar permissões para tipo específico de usuário",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Permissions"
        ],
        "security": [{
          "Token" : [] 
        }],
        "summary": "Apagar permissões para tipo específico de usuário",
        "parameters": [
          {
            "$ref": "#/parameters/userTypeID"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "404": {
            "description": "Tipo de usuário não encontrado",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Falha ao deletar permissões para tipo específico de usuário",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "default": {
            "description": "Falha ao deletar permissões para tipo específico de usuário",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },

    "/cards": {
      "post": {
        "tags": [
          "Cards"
        ],
        "security": [{
          "Token" : [] 
        }],
        "summary": "Criar novo card",
        "parameters": [
          {
            "in": "body",
            "name": "Cadastrar card",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Cards"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/Cards"
            }
          },
          "400": {
            "description": "Informações incompletas",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Tipo de card ou usuário não encontrado",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Ocorreu um erro ao cadastrar card, tente novamente",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "default": {
            "description": "Ocorreu um erro ao cadastrar card, tente novamente",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "get": {
        "tags": [
          "Cards"
        ],
        "security": [{
          "Token" : [] 
        }],
        "summary": "Consultar todos os cards",
        "responses": {
          "200": {
            "description": "OK || Não há cartões cadastrados",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Cards"
              }
            }
          },
          "500": {
            "description": "Falha ao listar cards",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "default": {
            "description": "Falha ao listar cards",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/cards/{id}": {
      "get": {
        "tags": [
          "Cards"
        ],
        "security": [{
          "Token" : [] 
        }],
        "summary": "Consultar cards aparti do tipo",
        "parameters": [
          {
            "$ref": "#/parameters/cardKeyword"
          }
        ],
        "responses": {
          "200": {
            "description": "OK || Não há cartões cadastrados",
            "schema": {
              "type": "array",
              "items": {  
                "$ref": "#/definitions/Cards"
              }
            }
          },
          "404": {
            "description": "Tipo de card não encontrado.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Falha ao listar card por tipo",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "default": {
            "description": "Falha ao listar card por tipo",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "put": {
        "tags": [
          "Cards"
        ],
        "security": [{
          "Token" : [] 
        }],
        "summary": "Atualizar informações do card aparti do seu id",
        "parameters": [
          {
            "$ref": "#/parameters/cardID"
          },
          {
            "in": "body",
            "name": "Atuaizar card",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Cards"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Cards"
            }
          },
          "400": {
            "description": "Informações incompletas",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Card não encontrado",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Falha ao atualizar card",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "default": {
            "description": "Falha ao atualizar card",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Cards"
        ],
        "security": [{
          "Token" : [] 
        }],
        "summary": "Apagar card aparti do seu id",
        "parameters": [
          {
            "$ref": "#/parameters/cardID"
          }
        ],
        "responses": {
          "200": {
            "description": "Removido"
          },
          "404": {
            "description": "Card não encontrado",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Falha ao deletar card",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "default": {
            "description": "Falha ao deletar card",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },

    "/typeCard": {
      "post": {
        "tags": [
          "TypeCard"
        ],
        "security": [{
          "Token" : [] 
        }],
        "summary": "Criar novo tipo",
        "parameters": [
          {
            "in": "body",
            "name": "Cadastrar tipo de card",
            "required": true,
            "schema": {
              "$ref": "#/definitions/TypeCard"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/TypeCard"
            }
          },
          "400": {
            "description": "Informações incompletas",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "409": {
            "description": "Tipo de card já cadastrado",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Falha ao criar novo tipo de card",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "default": {
            "description": "Falha ao criar novo tipo de card",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "get": {
        "tags": [
          "TypeCard"
        ],
        "security": [{
          "Token" : [] 
        }],
        "summary": "Cunsultar todos os tipos",
        "responses": {
          "200": {
            "description": "OK || Não há types para cartões cadastrados sem corpo",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/TypeCard"
              }
            }
          },
          "500": {
            "description": "Falha ao listar todos os tipos de card",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "default": {
            "description": "Falha ao listar todos os tipos de card",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/typeCard/{id}": {
      "put": {
        "tags": [
          "TypeCard"
        ],
        "security": [{
          "Token" : [] 
        }],
        "summary": "Atualizar tipo",
        "parameters": [
          {
            "$ref": "#/parameters/cardTypeID"
          },
          {
            "in": "body",
            "name": "Atuaizar tipo",
            "required": true,
            "schema": {
              "$ref": "#/definitions/TypeCard"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Atualizado",
            "schema": {
              "$ref": "#/definitions/TypeCard"
            }
          },
          "400": {
            "description": "Informações incompletas",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Tipo de card não encontrado",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "409": {
            "description": "Tipo de card já cadastrado",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Falha ao atualizar tipo de card",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "default": {
            "description": "Falha ao atualizar tipo de card",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "TypeCard"
        ],
        "security": [{
          "Token" : [] 
        }],
        "summary": "Apagar tipo",
        "parameters": [
          {
            "$ref": "#/parameters/cardTypeID"
          }
        ],
        "responses": {
          "200": {
            "description": "Removido"
          },
          "404": {
            "description": "Tipo de card não encontrado",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Falha ao deletar tipo de card",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "default": {
            "description": "Falha ao deletar tipo de card",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/posts/": {
      "post": {
        "tags": [
          "Posts"
        ],
        "security": [{
          "Token" : [] 
        }],
        "summary": "Criar novo post",
        
        "parameters": [
          {
            "in": "formData",
            "name": "file",
            "type": "file",
            "description": "Upload de arquivos"
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/Posts"
            }
          },
          "400": {
            "description": "Imagem não recebida || Não foi possível extrair informações da imagem || Informações incompletas",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Falha ao armazenar imagem",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "default": {
            "description": "Falha ao armazenar imagem",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        } 
      },
      "get": {
        "tags": [
          "Posts"
        ],
        "security": [{
          "Token" : [] 
        }],
        "summary": "Consultar todos os posts",
        "responses": {
          "200": {
            "description": "OK ",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Posts"
              }
            }
          },
          "404": {
            "description": "Nenhuma imagem encontrada",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Falha ao carregar imagens",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "default": {
            "description": "Falha ao carregar imagens",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/posts/search": {
      "get": {
        "tags": [
          "Posts"
        ],
        "security": [{
          "Token" : [] 
        }],
        "summary": "Buscar post",
        
        "parameters": [
          {
            "in": "body",
            "name": "Buscar post pela url",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "url": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Posts"
            }
          },
          "400": {
            "description": "Informações incompletas",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Imagem não encontrada",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Falha ao buscar imagem",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "default": {
            "description": "Falha ao buscar imagem",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        } 
      }
    },
    "/post/{id}": {
      "delete": {
        "tags": [
          "Posts"
        ],
        "security": [{
          "Token" : [] 
        }],
        "summary": "Apagar post",
        "parameters": [
          {
            "$ref": "#/parameters/postID"
          }
        ],
        "responses": {
          "200": {
            "description": "Removido"
          },
          "404": {
            "description": "Imagem não encontrada",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Falha ao remover imagem",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "default": {
            "description": "Falha ao remover imagem",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/extract/": {
      "post": {
        "tags": [
          "Extract"
        ],
        "security": [{
          "Token" : [] 
        }],
        "summary": "Extrair dados de artigo",
        "parameters": [
          {
            "in": "body",
            "name": "Cadastrar ação",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "url": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "properties": {
                "url": {
                  "type": "string"
                },
                "title": {
                  "type": "string"
                },
                "description": {
                  "type": "string"
                },
                "links": {
                  "type": "string"
                },
                "image": {
                  "type": "string"
                },
                "content": {
                  "type": "string"
                },
                "author": {
                  "type": "string"
                },
                "source": {
                  "type": "string"
                },
                "published": {
                  "type": "string"
                },
                "ttr": {
                  "type": "string"
                }                
              }
            }
          },
          "400": {
            "description": "Informações incompletas",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Não foi possível extrair informações da URL",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "default": {
            "description": "Não foi possível extrair informações da URL",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    }
  },
  "host": "hopeproject.herokuapp.com",
  "schemes": [
    "https",
    "http"
  ]
}
